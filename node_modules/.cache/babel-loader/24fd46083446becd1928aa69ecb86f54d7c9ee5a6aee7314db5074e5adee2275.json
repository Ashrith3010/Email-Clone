{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\I7738\\\\Desktop\\\\New folder\\\\frontend app\\\\gmail-mock\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Sidebar from './Sidebar';\nimport { Routes, Route } from 'react-router-dom';\nimport Inbox from '../components/Inbox';\nimport Compose from '../components/Compose';\nimport Trash from '../components/Trash';\nimport Sent from '../components/Sent';\nimport Drafts from '../components/Drafts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [emails, setEmails] = useState([]);\n  useEffect(() => {\n    // Fetching the emails from the backend (simulated)\n    fetch('/emails.json').then(response => response.json()).then(data => setEmails(data.emails));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"inbox\",\n          element: /*#__PURE__*/_jsxDEV(Inbox, {\n            emails: emails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"compose\",\n          element: /*#__PURE__*/_jsxDEV(Compose, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"trash\",\n          element: /*#__PURE__*/_jsxDEV(Trash, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"sent\",\n          element: /*#__PURE__*/_jsxDEV(Sent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"drafts\",\n          element: /*#__PURE__*/_jsxDEV(Drafts, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Inbox, {\n            emails: emails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"Pz1emXvf1o2teMcG4tW42BuWti4=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Sidebar","Routes","Route","Inbox","Compose","Trash","Sent","Drafts","jsxDEV","_jsxDEV","Dashboard","_s","emails","setEmails","fetch","then","response","json","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/I7738/Desktop/New folder/frontend app/gmail-mock/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport Inbox from '../components/Inbox';\r\nimport Compose from '../components/Compose';\r\nimport Trash from '../components/Trash';\r\nimport Sent from '../components/Sent';\r\nimport Drafts from '../components/Drafts';\r\n\r\nfunction Dashboard() {\r\n  const [emails, setEmails] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetching the emails from the backend (simulated)\r\n    fetch('/emails.json')\r\n      .then(response => response.json())\r\n      .then(data => setEmails(data.emails));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <Sidebar />\r\n      <div className=\"content\">\r\n        <Routes>\r\n          <Route path=\"inbox\" element={<Inbox emails={emails} />} />\r\n          <Route path=\"compose\" element={<Compose />} />\r\n          <Route path=\"trash\" element={<Trash />} />\r\n          <Route path=\"sent\" element={<Sent />} />\r\n          <Route path=\"drafts\" element={<Drafts />} />\r\n          <Route path=\"/\" element={<Inbox emails={emails} />} /> {/* Default to Inbox */}\r\n        </Routes>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
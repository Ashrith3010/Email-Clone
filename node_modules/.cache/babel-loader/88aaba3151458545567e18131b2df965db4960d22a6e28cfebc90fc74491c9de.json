{"ast":null,"code":"// emailService.js\nexport const getEmails = () => {\n  return fetch('http://localhost:3001/emails') // Ensure the correct endpoint\n  .then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  }).then(data => data.emails).catch(error => {\n    console.error('There was a problem with the fetch operation:', error);\n  });\n};\nexport const sendEmail = email => {\n  // In a real application, you would POST to an API\n  console.log('Sending email:', email);\n};\n\n// New function to handle login\nexport const login = (email, password) => {\n  return fetch('http://localhost:3001/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error('Invalid email or password');\n    }\n    return response.json();\n  }).then(data => {\n    console.log('Login successful:', data);\n    return data; // Return the account information or success message\n  }).catch(error => {\n    console.error('There was a problem with the login operation:', error);\n    throw error; // Re-throw the error for further handling if needed\n  });\n};","map":{"version":3,"names":["getEmails","fetch","then","response","ok","Error","json","data","emails","catch","error","console","sendEmail","email","log","login","password","method","headers","body","JSON","stringify"],"sources":["C:/Users/I7738/Desktop/New folder/frontend app/gmail-mock/src/services/emailService.js"],"sourcesContent":["// emailService.js\r\nexport const getEmails = () => {\r\n  return fetch('http://localhost:3001/emails') // Ensure the correct endpoint\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      return response.json();\r\n    })\r\n    .then((data) => data.emails)\r\n    .catch((error) => {\r\n      console.error('There was a problem with the fetch operation:', error);\r\n    });\r\n};\r\n\r\nexport const sendEmail = (email) => {\r\n  // In a real application, you would POST to an API\r\n  console.log('Sending email:', email);\r\n};\r\n\r\n// New function to handle login\r\nexport const login = (email, password) => {\r\n  return fetch('http://localhost:3001/login', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  })\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error('Invalid email or password');\r\n      }\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      console.log('Login successful:', data);\r\n      return data; // Return the account information or success message\r\n    })\r\n    .catch((error) => {\r\n      console.error('There was a problem with the login operation:', error);\r\n      throw error; // Re-throw the error for further handling if needed\r\n    });\r\n};\r\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,SAAS,GAAGA,CAAA,KAAM;EAC7B,OAAOC,KAAK,CAAC,8BAA8B,CAAC,CAAC;EAAA,CAC1CC,IAAI,CAAEC,QAAQ,IAAK;IAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAKA,IAAI,CAACC,MAAM,CAAC,CAC3BC,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;EACvE,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAME,SAAS,GAAIC,KAAK,IAAK;EAClC;EACAF,OAAO,CAACG,GAAG,CAAC,gBAAgB,EAAED,KAAK,CAAC;AACtC,CAAC;;AAED;AACA,OAAO,MAAME,KAAK,GAAGA,CAACF,KAAK,EAAEG,QAAQ,KAAK;EACxC,OAAOf,KAAK,CAAC,6BAA6B,EAAE;IAC1CgB,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,KAAK;MAAEG;IAAS,CAAC;EAC1C,CAAC,CAAC,CACCd,IAAI,CAAEC,QAAQ,IAAK;IAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;IAC9C;IACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;IACdI,OAAO,CAACG,GAAG,CAAC,mBAAmB,EAAEP,IAAI,CAAC;IACtC,OAAOA,IAAI,CAAC,CAAC;EACf,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;IACrE,MAAMA,KAAK,CAAC,CAAC;EACf,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}